import 'dart:io';
import 'package:flutter/material.dart';
import 'package:image_picker/image_picker.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_storage/firebase_storage.dart';

// Your Firebase options file generated by the FlutterFire CLI
import 'firebase_options.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Revision App',
      theme: ThemeData(
        primarySwatch: Colors.deepPurple,
        useMaterial3: true,
      ),
      home: const HomeScreen(),
    );
  }
}

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  // A variable to track if there are any notes
  bool hasNotes = false;

  // A function to open the camera and take a photo
  Future<void> _takePhoto() async {
    final ImagePicker picker = ImagePicker();
    final XFile? photo = await picker.pickImage(source: ImageSource.camera);

    if (photo != null) {
      // Show a loading indicator
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Uploading photo...')),
      );

      // Save the photo to Firebase Storage
      final String photoUrl = await _uploadPhoto(File(photo.path));

      // Save the photo reference to Firestore
      await _addNoteToFirestore(photoUrl);

      // Update state and show success message
      setState(() {
        hasNotes = true;
      });
      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('Photo uploaded successfully!')),
      );
    }
  }

  // Uploads the file to Firebase Storage
  Future<String> _uploadPhoto(File file) async {
    final storageRef = FirebaseStorage.instance.ref();
    final fileName = 'notes/${DateTime.now().millisecondsSinceEpoch}.png';
    final uploadTask = storageRef.child(fileName).putFile(file);

    final TaskSnapshot snapshot = await uploadTask.whenComplete(() {});
    final String downloadUrl = await snapshot.ref.getDownloadURL();
    return downloadUrl;
  }

  // Saves the photo URL to Firestore
  Future<void> _addNoteToFirestore(String photoUrl) async {
    await FirebaseFirestore.instance.collection('notes').add({
      'imageUrl': photoUrl,
      'timestamp': FieldValue.serverTimestamp(),
    });
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('My Revision App'),
        backgroundColor: Theme.of(context).primaryColor,
        foregroundColor: Colors.white,
      ),
      body: Center(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Text(
                'Welcome to your study session!',
                style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                textAlign: TextAlign.center,
              ),
              const SizedBox(height: 40),
              ElevatedButton.icon(
                onPressed: hasNotes
                    ? () {
                        // Action to start the random scrolling
                        print('Start Study button pressed!');
                      }
                    : null,
                icon: const Icon(Icons.play_arrow),
                label: const Text('Start Study'),
                style: ElevatedButton.styleFrom(
                  minimumSize: const Size(250, 50),
                  textStyle: const TextStyle(fontSize: 18),
                ),
              ),
              const SizedBox(height: 20),
              ElevatedButton.icon(
                onPressed: _takePhoto,
                icon: const Icon(Icons.camera_alt),
                label: const Text('Upload Notes'),
                style: ElevatedButton.styleFrom(
                  minimumSize: const Size(250, 50),
                  textStyle: const TextStyle(fontSize: 18),
                ),
              ),
              const SizedBox(height: 20),
              if (!hasNotes)
                const Text(
                  'Please upload notes to enable the "Start Study" button.',
                  style: TextStyle(fontStyle: FontStyle.italic),
                  textAlign: TextAlign.center,
                ),
            ],
          ),
        ),
      ),
    );
  }
}
